; Auto-generated. Do not edit!


(cl:in-package softarq_msgs-msg)


;//! \htmlinclude SequenceGoal.msg.html

(cl:defclass <SequenceGoal> (roslisp-msg-protocol:ros-message)
  ((end_limit
    :reader end_limit
    :initarg :end_limit
    :type cl:integer
    :initform 0))
)

(cl:defclass SequenceGoal (<SequenceGoal>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <SequenceGoal>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'SequenceGoal)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name softarq_msgs-msg:<SequenceGoal> is deprecated: use softarq_msgs-msg:SequenceGoal instead.")))

(cl:ensure-generic-function 'end_limit-val :lambda-list '(m))
(cl:defmethod end_limit-val ((m <SequenceGoal>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader softarq_msgs-msg:end_limit-val is deprecated.  Use softarq_msgs-msg:end_limit instead.")
  (end_limit m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <SequenceGoal>) ostream)
  "Serializes a message object of type '<SequenceGoal>"
  (cl:let* ((signed (cl:slot-value msg 'end_limit)) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 18446744073709551616) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) unsigned) ostream)
    )
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <SequenceGoal>) istream)
  "Deserializes a message object of type '<SequenceGoal>"
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) unsigned) (cl:read-byte istream))
      (cl:setf (cl:slot-value msg 'end_limit) (cl:if (cl:< unsigned 9223372036854775808) unsigned (cl:- unsigned 18446744073709551616))))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<SequenceGoal>)))
  "Returns string type for a message object of type '<SequenceGoal>"
  "softarq_msgs/SequenceGoal")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'SequenceGoal)))
  "Returns string type for a message object of type 'SequenceGoal"
  "softarq_msgs/SequenceGoal")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<SequenceGoal>)))
  "Returns md5sum for a message object of type '<SequenceGoal>"
  "1aab682b33bb2871b73e2f2a1b69674f")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'SequenceGoal)))
  "Returns md5sum for a message object of type 'SequenceGoal"
  "1aab682b33bb2871b73e2f2a1b69674f")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<SequenceGoal>)))
  "Returns full string definition for message of type '<SequenceGoal>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%int64 end_limit~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'SequenceGoal)))
  "Returns full string definition for message of type 'SequenceGoal"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%int64 end_limit~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <SequenceGoal>))
  (cl:+ 0
     8
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <SequenceGoal>))
  "Converts a ROS message object to a list"
  (cl:list 'SequenceGoal
    (cl:cons ':end_limit (end_limit msg))
))
